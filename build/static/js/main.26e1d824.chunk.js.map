{"version":3,"sources":["actions/checkToken.js","constants/userConstants.js","components/Header.js","actions/userActions.js","components/Footer.js","hocs/Layout.js","containers/Home.js","components/Loader.js","components/board/slice/workpackageSlice.js","components/NewCard.js","components/board/slice/columnsSlice.js","components/board/slice/documentsSlice.js","components/board/components/Task.js","components/board/components/Column.js","components/board/Board.js","components/FormContainer.js","components/Message.js","containers/Login.js","containers/Register.js","containers/Profile.js","components/board/components/DocumentUpload.js","components/board/components/DocumentsView.js","components/board/components/CardView.js","components/board/components/EditCard.js","components/board/components/Sidebar.js","containers/Card.js","App.js","store.js","reducers/userReducer.js","index.js"],"names":["checkToken","dispatch","getState","a","userInfo","user","decodedAccessToken","jwt_decode","access","complete","decodedRefreshToken","refresh","currentDate","Date","exp","getTime","console","log","config","headers","body","axios","post","data","localStorage","setItem","JSON","stringify","USER_REQUEST","USER_SUCCESS","USER_FAIL","USER_LOGOUT","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_PROFILE_UPDATE_REQUEST","USER_PROFILE_UPDATE_SUCCESS","USER_PROFILE_UPDATE_FAIL","USER_PROFILE_UPDATE_RESET","Header","useDispatch","useSelector","state","Navbar","bg","variant","expand","collapseOnSelect","Container","fluid","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","first_name","last_name","Item","onClick","removeItem","type","Footer","Row","Col","Layout","props","children","Home","error","loading","useEffect","Loader","Spinner","animation","role","style","position","height","width","top","left","display","fetchWorkpackages","createAsyncThunk","get","createWorkpackage","procedure","planned_start_date","planned_end_date","planned_efforts","project_lead_column","put","updateWorkpackage","workpackagesAdapter","createEntityAdapter","selectId","workpackage","workpackagesSlice","createSlice","name","initialState","reducers","extraReducers","pending","fulfilled","payload","setAll","rejected","addOne","NewCard","workpackages","useState","show","setShow","handleClose","formData","setFormData","onChange","e","target","value","maxWidth","Button","borderStyle","borderRadius","aria-hidden","Modal","onHide","backdrop","keyboard","size","closeButton","Title","Body","Form","onSubmit","preventDefault","Group","controlId","Label","Control","required","placeholder","min","fetchColumns","updateColumns","columnId","lead_column","order","changes","updateBetweenColumns","start","startTasks","finish","finishTasks","draggableId","workpackageId","updateStart","updateFinish","columnsAdapter","column","columnsSlice","getInitialState","updateOne","updateMany","columnsSelectors","getSelectors","columns","fetchDocuments","fileUpload","file","description","taskId","FormData","append","onUploadProgress","progressEvent","totalLength","lengthComputable","total","getResponseHeader","progressBarValue","Math","round","loaded","documentsAdapter","document","documentsSlice","processDetail","actions","Task","task","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","userSelect","margin","minHeight","backgroundColor","isDragging","minWidth","color","Subtitle","Text","Dropdown","background","boxShadow","paddingTop","paddingBottom","Menu","as","pathname","Column","tasks","droppableId","droppableProps","isDraggingOver","padding","map","memo","Board","columnsIds","selectIds","selectEntities","entities","justifyContent","onDragEnd","result","destination","source","Array","from","splice","join","FormContainer","xs","md","Message","Alert","Login","location","history","redirect","search","split","push","email","password","reponse","response","details","detail","message","login","Register","register","Profile","userDetails","userProfileUpdate","success","updateError","Authorization","updateUserProfile","DocumentUpload","documents","setFile","files","handleFile","ProgressBar","animated","now","label","DocumentsView","documentIds","documentsData","setDocumentsData","documentDataIds","setDocumentDataIds","Table","striped","bordered","hover","responsive","docId","docs","overflowX","overflowY","href","CardView","EditCard","Sidebar","Tab","defaultActiveKey","sm","eventKey","Content","Pane","Card","useParams","App","path","exact","component","combineReducers","action","columnsReducer","workpackagesReducer","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.26e1d824.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const checkToken = () => async (dispatch, getState) => {\r\n    const {\r\n        user: { userInfo}\r\n    } = getState()\r\n    const decodedAccessToken=jwt_decode(userInfo.access, {complete: true});\r\n    const decodedRefreshToken=jwt_decode(userInfo.refresh, {complete: true});\r\n    const currentDate = new Date();\r\n    if (decodedAccessToken.exp * 1000 < currentDate.getTime())\r\n    {\r\n        console.log(\"Access Token expired.\");\r\n\r\n        if (decodedRefreshToken.exp * 1000 > currentDate.getTime())\r\n        {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            };\r\n            \r\n            const body = { 'refresh': userInfo.refresh};\r\n            const {data} = await axios.post('http://127.0.0.1:8000/user/token/refresh/', body, config);\r\n            userInfo.refresh = data.refresh;\r\n            userInfo.access = data.access;\r\n            localStorage.setItem('userInfo', JSON.stringify(userInfo));\r\n        }\r\n        else\r\n        {\r\n            console.log('Refresh token is expired');\r\n        }\r\n    }\r\n    else {\r\n        console.log(\"Valid token\");\r\n    }\r\n}","export const USER_REQUEST = 'USER_REQUEST';\r\nexport const USER_SUCCESS = 'USER_SUCCESS';\r\nexport const USER_FAIL = 'USER_FAIL';\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_PROFILE_UPDATE_REQUEST = 'USER_PROFILE_UPDATE_REQUEST';\r\nexport const USER_PROFILE_UPDATE_SUCCESS = 'USER_PROFILE_UPDATE_SUCCESS';\r\nexport const USER_PROFILE_UPDATE_FAIL = 'USER_PROFILE_UPDATE_FAIL';\r\nexport const USER_PROFILE_UPDATE_RESET = 'USER_PROFILE_UPDATE_RESET';","import React from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\n\r\nimport { logout } from '../actions/userActions';\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    //Logout\r\n    const logout_user = () => {\r\n        dispatch(logout())\r\n    };\r\n\r\n    //User is Logged in\r\n    const user = useSelector(state => state.user)\r\n    const { userInfo } = user\r\n    \r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container fluid>\r\n                    <LinkContainer to=\"/\">\r\n                        <Navbar.Brand>Rope</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <LinkContainer to=\"/\" className=\"mr-auto\">\r\n                            <Nav.Link>Home</Nav.Link>\r\n                        </LinkContainer>\r\n                        {userInfo ? (\r\n                                <>\r\n                                <LinkContainer to=\"/board\">\r\n                                    <Nav.Link>Board</Nav.Link>\r\n                                </LinkContainer>\r\n                                <NavDropdown title={userInfo.first_name+\" \"+userInfo.last_name} id='username'>\r\n                                    <LinkContainer to=\"/profile\">\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logout_user}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                                </>\r\n                            )\r\n                            :\r\n                            (\r\n                                <>\r\n                                    <LinkContainer to=\"/login\">\r\n                                        <Nav.Link>Login</Nav.Link>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to=\"/register\">\r\n                                        <Nav.Link>Register</Nav.Link>\r\n                                    </LinkContainer>\r\n                                </>\r\n                            )\r\n                        }\r\n                    </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import axios from 'axios';\r\nimport { checkToken } from './checkToken';\r\nimport {\r\n    USER_REQUEST,\r\n    USER_SUCCESS,\r\n    USER_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_PROFILE_UPDATE_REQUEST,\r\n    USER_PROFILE_UPDATE_SUCCESS,\r\n    USER_PROFILE_UPDATE_FAIL,\r\n    USER_PROFILE_UPDATE_RESET,\r\n} from '../constants/userConstants';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: USER_REQUEST,\r\n        });\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const body = JSON.stringify({email, password});\r\n        const {data} = await axios.post('http://127.0.0.1:8000/user/login/', body, config);\r\n        dispatch({\r\n            type: USER_SUCCESS,\r\n            payload: data,\r\n        });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n\r\n    } catch (error) {\r\n        console.log(error.reponse)\r\n        console.log(error.response.data.details)\r\n        console.log(error.response.data.detail)\r\n        console.log(error.message)\r\n        dispatch({\r\n            type: USER_FAIL,\r\n            payload: error.reponse && error.response.data.details\r\n            ? error.message\r\n            : error.response.data.detail,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    dispatch(checkToken())\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({\r\n        type:USER_LOGOUT\r\n    })\r\n    dispatch({\r\n        type:USER_DETAILS_RESET,\r\n    })\r\n}\r\n\r\nexport const register = (first_name, last_name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REQUEST,\r\n        });\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const body = JSON.stringify({first_name, last_name, email, password});\r\n        const {data} = await axios.post('http://127.0.0.1:8000/user/register/', body, config);\r\n        dispatch({\r\n            type: USER_SUCCESS,\r\n            payload: data,\r\n        });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_FAIL,\r\n            payload: error.reponse && error.response.data.details\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST,\r\n        });\r\n\r\n        const {\r\n            user: { userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.access}`,\r\n            }\r\n        };\r\n        \r\n        const {data} = await axios.get('http://127.0.0.1:8000/user/user-details/', config);\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.reponse && error.response.data.details\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (first_name, last_name, email, password) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_PROFILE_UPDATE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            user: { userInfo}\r\n        } = getState()\r\n\r\n        console.log(userInfo.access)\r\n        \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.access}`,\r\n            }\r\n        };\r\n        const body = JSON.stringify({first_name, last_name, email, password});\r\n        const {data} = await axios.put('http://127.0.0.1:8000/user/update/', body, config);\r\n        \r\n        dispatch({\r\n            type: USER_PROFILE_UPDATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n        \r\n        dispatch({\r\n            type: USER_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_PROFILE_UPDATE_FAIL,\r\n            payload: error.reponse && error.response.data.details\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">\r\n                        Copyright &copy; Rope\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\r\nimport Navbar from '../components/Header';\r\nimport Footer from '../components/Footer';\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            {props.children}\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout;\r\n","import React, { useEffect } from 'react';\r\nimport { checkToken } from '../actions/checkToken';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Container} from 'react-bootstrap';\r\nconst Home = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const user = useSelector(state => state.user)\r\n    const { error, loading, userInfo} = user\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            dispatch(checkToken());\r\n        }\r\n    }, [userInfo])\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <h1>Home</h1>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            style={{\r\n                position: 'absolute',\r\n                height:'200px',\r\n                width:'200px',\r\n                top: '45%',\r\n                left: '45%',\r\n                display:'block',\r\n            }}\r\n        >\r\n            <span className=\"sr-only\"></span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import {  createEntityAdapter,  createSlice,  createAsyncThunk,} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const fetchWorkpackages = createAsyncThunk(\r\n    'workpackages/fetchWorkpackages',\r\n    async () => {\r\n        const {data} = await axios.get('http://localhost:8000/api/workpackages/');\r\n        return data;\r\n    }\r\n)\r\n\r\nexport const createWorkpackage = createAsyncThunk(\r\n    'workpackages/createWorkpackage',\r\n    async ({ title, procedure, planned_start_date, planned_end_date, planned_efforts }) => {\r\n        const body = {\r\n            title: title,\r\n            procedure: procedure,\r\n            planned_start_date: planned_start_date,\r\n            planned_end_date: planned_end_date,\r\n            planned_efforts: planned_efforts,\r\n            project_lead_column: 1,\r\n        };\r\n        const { data } = await axios.put(`http://localhost:8000/api/workpackages-create/`, body);\r\n        return data\r\n    }\r\n)\r\n\r\nexport const updateWorkpackage = createAsyncThunk(\r\n    'workpackages/updateWorkpackage',\r\n    async ({ id, title, procedure, planned_start_date, planned_end_date, planned_efforts }) => {\r\n        const body = {\r\n            id: id, \r\n            title: title,\r\n            procedure: procedure,\r\n            planned_start_date: planned_start_date,\r\n            planned_end_date: planned_end_date,\r\n            planned_efforts: planned_efforts\r\n        };\r\n        const data = await axios.put(`http://localhost:8000/api/workpackages-update/`, body);\r\n        return data\r\n    }\r\n)\r\n\r\n\r\nconst workpackagesAdapter = createEntityAdapter({\r\n    selectId: (workpackage) => workpackage.id\r\n})\r\n\r\nconst workpackagesSlice = createSlice({\r\n    name: 'workpackages',\r\n    initialState:{},\r\n    reducers:{},\r\n    extraReducers:{\r\n        [fetchWorkpackages.pending](state){\r\n            state.loading = true\r\n        },\r\n        [fetchWorkpackages.fulfilled](state, {payload}){\r\n            state.loading = false\r\n            workpackagesAdapter.setAll(state, payload)\r\n        },\r\n        [fetchWorkpackages.rejected](state){\r\n            state.loading = false\r\n        },\r\n        [createWorkpackage.pending](state){\r\n            state.loading = true\r\n        },\r\n        [createWorkpackage.fulfilled](state, {payload}){\r\n            state.loading = false\r\n            workpackagesAdapter.addOne(state, payload)\r\n        },\r\n        [createWorkpackage.rejected](state){\r\n            state.loading = false\r\n        },\r\n        [updateWorkpackage.pending](state){\r\n            state.loading = true\r\n        },\r\n        [updateWorkpackage.fulfilled](state, {payload}){\r\n            state.loading = false\r\n        },\r\n        [updateWorkpackage.rejected](state){\r\n            state.loading = false\r\n        },\r\n    }\r\n})\r\n\r\nexport default workpackagesSlice.reducer","import React, { useState } from 'react'\r\nimport { Button, Modal, Form, Container } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport { createWorkpackage } from './board/slice/workpackageSlice'\r\nconst NewCard = () => {\r\n    const loading = useSelector(state => state.workpackages.loading)\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        procedure: '',\r\n        planned_start_date: '',\r\n        planned_end_date: '',\r\n        planned_efforts: '',\r\n    });\r\n\r\n    const { title, procedure, planned_start_date, planned_end_date, planned_efforts } = formData;\r\n\r\n    const onChange = e => {\r\n        setFormData({...formData, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(createWorkpackage({ title, procedure, planned_start_date, planned_end_date, planned_efforts }))\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-grid gap-2\" style={{maxWidth:\"200px\"}}>\r\n                <Button className=\"p-1\" variant=\"outline-dark\" style={{borderStyle:\"dashed\", borderRadius:\"20px\"}} onClick={handleShow}>\r\n                    Add card <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n                </Button>\r\n            </div>\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                size=\"lg\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>New Card</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Container className=\"px-5\">\r\n                        {loading ? <Loader/> : <></>}\r\n                        <Form onSubmit={onSubmit}>\r\n                            <Form.Group controlId=\"title\">\r\n                                <Form.Label>Title</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    required\r\n                                    placeholder=\"title\"\r\n                                    value={title}\r\n                                    name=\"title\"\r\n                                    onChange={e => onChange(e)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"procedure\">\r\n                                <Form.Label>Procedure</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    required\r\n                                    placeholder=\"procedure\"\r\n                                    value={procedure}\r\n                                    name=\"procedure\"\r\n                                    onChange={e => onChange(e)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            \r\n                            <Form.Group controlId=\"planned_start_date\">\r\n                                <Form.Label>Planned Start Date</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"date\"\r\n                                    required\r\n                                    placeholder=\"Email\"\r\n                                    value={planned_start_date}\r\n                                    name=\"planned_start_date\"\r\n                                    onChange={e => onChange(e)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"planned_end_date\">\r\n                                <Form.Label>Planned End Date</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"date\"\r\n                                    placeholder=\"New Password\"\r\n                                    value={planned_end_date}\r\n                                    name=\"planned_end_date\"\r\n                                    onChange={e => onChange(e)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"planned_efforts\">\r\n                                <Form.Label>Planned Efforts</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    required\r\n                                    placeholder=\"planned_efforts\"\r\n                                    value={planned_efforts}\r\n                                    name=\"planned_efforts\"\r\n                                    onChange={e => onChange(e)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Button type=\"submit\" variant=\"primary\" className=\"my-2\">update</Button>\r\n                        </Form>\r\n                    </Container>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewCard\r\n","import { createEntityAdapter,  createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const fetchColumns = createAsyncThunk(\r\n    'columns/fetchColumns',\r\n    async () => {\r\n        const {data} = await axios.get('http://localhost:8000/api/columns/');\r\n        return data;\r\n    }\r\n)\r\n\r\nexport const updateColumns = createAsyncThunk(\r\n    'columns/updateColumns',\r\n    async ({columnId, lead_column} ) => {\r\n        const body = {\r\n            columnId : columnId,\r\n            order : lead_column,\r\n        };\r\n        axios.put('http://localhost:8000/api/workpackages-order-update/', body);\r\n        return {id: columnId, changes: {\"lead_column\" : lead_column}}\r\n    }\r\n)\r\nexport const updateBetweenColumns = createAsyncThunk(\r\n    'columns/updateBetweenColumns',\r\n    async ({start, startTasks, finish, finishTasks, draggableId}) => {\r\n        const body = {\r\n            columnId : finish,\r\n            workpackageId : draggableId,\r\n            order : finishTasks,\r\n        };\r\n        axios.put('http://localhost:8000/api/workpackages-column-update/', body);\r\n        return {start, updateStart: {\"lead_column\" : startTasks}, finish, updateFinish: {\"lead_column\" : finishTasks}}\r\n    }\r\n)\r\n\r\nconst columnsAdapter = createEntityAdapter({    \r\n    selectId: (column) => column.id\r\n})\r\n\r\nconst columnsSlice = createSlice({\r\n    name: 'columns',\r\n    initialState: columnsAdapter.getInitialState({ loading: false }),\r\n    reducers:{},\r\n    extraReducers:{\r\n        [fetchColumns.pending](state){\r\n            state.loading = true\r\n        },\r\n        [fetchColumns.fulfilled](state, {payload}){\r\n            state.loading = false\r\n            columnsAdapter.setAll(state, payload)\r\n        },\r\n        [fetchColumns.rejected](state){\r\n            state.loading = false\r\n        },\r\n        [updateColumns.pending](state){\r\n            state.loading = true\r\n        },\r\n        [updateColumns.fulfilled](state, {payload}){\r\n            state.loading = false\r\n            columnsAdapter.updateOne(state, {id: payload.id, changes: payload.changes})\r\n        },\r\n        [updateBetweenColumns.pending](state){\r\n            state.loading = true\r\n        },\r\n        [updateBetweenColumns.fulfilled](state, { payload }){\r\n            state.loading = false\r\n            columnsAdapter.updateMany(state, [{id: payload.start, changes: payload.updateStart}, {id: payload.finish, changes: payload.updateFinish}])\r\n        },\r\n    },\r\n})\r\n\r\nexport const columnsSelectors = columnsAdapter.getSelectors((state) => state.columns);\r\n\r\nexport default columnsSlice.reducer","import {  createEntityAdapter,  createSlice,  createAsyncThunk,} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const fetchDocuments = createAsyncThunk(\r\n    'documents/fetchDocuments',\r\n    async () => {\r\n        const {data} = await axios.get('http://localhost:8000/api/documents/');\r\n        return data;\r\n    }\r\n)\r\nexport const fileUpload = createAsyncThunk(\r\n    'documents/fileUpload',\r\n    async ({file, description, taskId}, {dispatch} ) => {\r\n        let body = new FormData();\r\n        body.append('file', file);\r\n        body.append('description', description);\r\n        body.append('workpackage', taskId);\r\n        const {data} = await axios.post('http://127.0.0.1:8000/api/document-upload/', body, {\r\n            onUploadProgress: (progressEvent) => {\r\n                const totalLength = progressEvent.lengthComputable ? progressEvent.total : progressEvent.target.getResponseHeader('content-length') || progressEvent.target.getResponseHeader('x-decompressed-content-length');\r\n                if (totalLength !== null) {\r\n                    dispatch(progressBarValue(Math.round( (progressEvent.loaded * 100) / totalLength )))\r\n                }\r\n            }\r\n        });\r\n        return data;\r\n    }\r\n)\r\n\r\nconst documentsAdapter = createEntityAdapter({\r\n    selectId: (document) => document.id\r\n})\r\n\r\nconst documentsSlice = createSlice({\r\n    name: 'documents',\r\n    initialState: documentsAdapter.getInitialState({ loading: false, processDetail:0 }),\r\n    reducers:{\r\n        progressBarValue(state, {payload}) {\r\n            state.processDetail = payload\r\n        },\r\n    },\r\n    extraReducers:{\r\n        [fetchDocuments.pending](state){\r\n            state.loading = true\r\n        },\r\n        [fetchDocuments.fulfilled](state, {payload}){\r\n            state.loading = false\r\n            documentsAdapter.setAll(state, payload)\r\n        },\r\n        [fetchDocuments.rejected](state){\r\n            state.loading = false\r\n        },\r\n        [fileUpload.pending](state){\r\n            state.loading = true\r\n        },\r\n        [fileUpload.fulfilled](state, {payload}){\r\n            state.loading = false\r\n            state.processDetail = 0\r\n            documentsAdapter.addOne(state, payload)\r\n        },\r\n        [fileUpload.rejected](state){\r\n            state.loading = false\r\n            state.processDetail = 0\r\n        },\r\n    }\r\n})\r\nexport const documentsSelectors = documentsAdapter.getSelectors((state) => state.columns);\r\nexport const { progressBarValue } = documentsSlice.actions\r\nexport default documentsSlice.reducer","import React from 'react';\r\nimport {Card, Dropdown, Row, Col} from 'react-bootstrap';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Task = ({task, index}) => {\r\n    \r\n    return (\r\n        <Draggable draggableId={\"\"+task.id} index={index}>\r\n            {(provided, snapshot) => (                \r\n                <Card\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}\r\n                    style={{\r\n                        display:'flex',\r\n                        userSelect: \"none\",\r\n                        borderRadius: 6,\r\n                        margin: \"0 0 8px 0\",\r\n                        minHeight: \"0px\",\r\n                        backgroundColor: snapshot.isDragging\r\n                        ? \"#3c7a89\"\r\n                        : \"#2e4756\",\r\n                        ...provided.draggableProps.style\r\n                    }}\r\n                >\r\n                    <Row>\r\n                        <Col\r\n                            style={{\r\n                                minWidth: \"80%\"\r\n                            }}\r\n                        >\r\n                            <Card.Body>\r\n                                <Card.Title style={{color:\"white\"}}>{task.title}</Card.Title>\r\n                                <Card.Subtitle className=\"mb-2 text-muted\">Due Date: {task.planned_end_date}</Card.Subtitle>\r\n                                <Card.Text style={{color:\"white\"}}>\r\n                                    Procedure: {task.procedure}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Col>\r\n                        <Col\r\n                            style={{\r\n                                minWidth: \"20%\",\r\n                            }}\r\n                        >\r\n                            <Dropdown>\r\n                                <Dropdown.Toggle style={{background:\"transparent\", boxShadow: \"none\", paddingTop:0, paddingBottom:0}}>\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Item\r\n                                        as={Link}\r\n                                        to={{pathname: `/card/${task.id}`}}>\r\n                                        View\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Item>Delete</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            )}\r\n        </Draggable>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React, { memo, useState } from 'react';\r\nimport Task from './Task';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport {Col} from 'react-bootstrap';\r\n\r\nconst Column = ({ columnId, title, tasks }) => {\r\n    \r\n    return (\r\n        <div>\r\n            <h4>{title}</h4>\r\n            <Droppable droppableId={\"\"+columnId}>\r\n                {(provided, snapshot)=>(\r\n                    <Col\r\n                        ref={provided.innerRef}\r\n                        {...provided.droppableProps}\r\n                        style={{\r\n                            background: snapshot.isDraggingOver\r\n                                ? \"#B8DBD9\"\r\n                                : \"white\",\r\n                            padding: 4,\r\n                            minWidth:200,\r\n                            maxWidth:350,\r\n                            width:400,\r\n                            minHeight: 300,\r\n                        }}\r\n                    >\r\n                        {tasks.map((task, index) => (\r\n                            <Task key={task.id} task={task} index={index} />\r\n                        ))}\r\n                        {provided.placeholder}\r\n                    </Col>\r\n            )}\r\n            </Droppable>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Column);","import React, { useEffect } from 'react';\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport Loader from '../../components/Loader';\r\nimport NewCard from '../NewCard';\r\n\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\n\r\nimport { fetchColumns, updateColumns, updateBetweenColumns, columnsSelectors } from './slice/columnsSlice'\r\nimport { fetchWorkpackages } from './slice/workpackageSlice'\r\nimport { fetchDocuments } from './slice/documentsSlice';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Column from './components/Column';\r\n\r\nconst Board = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        dispatch(fetchColumns())\r\n        dispatch(fetchWorkpackages())\r\n        dispatch(fetchDocuments())\r\n    }, [dispatch]);\r\n\r\n    const columnsIds = useSelector(columnsSelectors.selectIds)\r\n    const columns = useSelector(columnsSelectors.selectEntities)\r\n    const loading = useSelector(state => state.columns.loading)\r\n    const workpackages = useSelector(state => state.workpackages.entities)\r\n    \r\n    const onDragEnd = (result) => {\r\n        const {destination, source, draggableId} = result\r\n        if(!destination)\r\n            return;\r\n        if(destination.droppableId === source.draggableId &&\r\n            destination.index === source.index)\r\n            return;\r\n        const start = source.droppableId\r\n        const finish = destination.droppableId\r\n        if(start === finish)\r\n        {\r\n            const lead_column = Array.from(columns[source.droppableId].lead_column)\r\n            lead_column.splice(source.index, 1);\r\n            lead_column.splice(destination.index, 0, draggableId);\r\n            const columnId = source.droppableId\r\n            if(lead_column.join(\",\") !== columns[source.droppableId].lead_column.join(\",\"))\r\n            {\r\n                dispatch(updateColumns({columnId, lead_column}))\r\n            }\r\n            else\r\n                return;\r\n        }\r\n        else if(start !== finish)\r\n        {\r\n            const startTasks = Array.from(columns[source.droppableId].lead_column)\r\n            startTasks.splice(source.index, 1);\r\n            const finishTasks = Array.from(columns[destination.droppableId].lead_column)\r\n            finishTasks.splice(destination.index, 0, draggableId);\r\n            dispatch(updateBetweenColumns({start, startTasks, finish, finishTasks, draggableId}))\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        {loading ? <Loader/> : <></>}\r\n        <Container fluid className=\"mt-3\">\r\n            <h1>Kanban Board</h1>\r\n            <hr />\r\n        </Container>\r\n        <Container>\r\n            <NewCard />\r\n        </Container>\r\n        <Container className=\"mt-3\" style={{display:'flex', justifyContent: 'space-around'}}>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n            {columns && workpackages ?\r\n                (columnsIds.map(id => {\r\n                    const tasks = columns[id].lead_column.map(taskId => workpackages[taskId])\r\n                    return <Column key={id} columnId={id} title={columns[id].title} tasks={tasks} />\r\n                }))\r\n                : <>No Columns</>\r\n            }\r\n            </DragDropContext>\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst FormContainer = (props) => {\r\n    return (\r\n        <Container className=\"py-5\">\r\n            <Row className = \"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {props.children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({variant, children}) => {\r\n    return (\r\n        <Alert\r\n         variant = {variant}\r\n        >\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React, { useEffect, useState } from 'react';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../actions/userActions';\r\n\r\nconst Login = ({location, history}) => {\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const user = useSelector(state => state.user)\r\n    const { error, loading, userInfo} = user\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formData;\r\n    \r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password));\r\n    };\r\n\r\n    // Is the user authenticated?\r\n    // Redirect them to the home page\r\n\r\n    return (\r\n        <>\r\n            <FormContainer>\r\n                <h1>Sign In</h1>\r\n                {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : <></>}\r\n                <Form onSubmit={onSubmit}>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={email}\r\n                            name=\"email\"\r\n                            onChange={e => onChange(e)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            name=\"password\"\r\n                            onChange={e => onChange(e)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" variant=\"primary\" className=\"my-2\">Sign In</Button>\r\n                </Form>\r\n            </FormContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from 'react';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { register } from '../actions/userActions';\r\n\r\nconst Register = ({location, history}) => {\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const user = useSelector(state => state.user)\r\n    const { error, loading, userInfo} = user\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [formData, setFormData] = useState({\r\n        first_name: '',\r\n        last_name: '',\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { first_name, last_name, email, password } = formData;\r\n    \r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(register(first_name, last_name, email, password));\r\n    };\r\n\r\n    // Is the user authenticated?\r\n    // Redirect them to the home page\r\n\r\n    return (\r\n        <>\r\n            <FormContainer>\r\n                <h1>Sign In</h1>\r\n                {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : <></>}\r\n                <Form onSubmit={onSubmit}>\r\n                    <Form.Group controlId=\"first_name\">\r\n                        <Form.Label>first_name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"first_name\"\r\n                            value={first_name}\r\n                            name=\"first_name\"\r\n                            onChange={e => onChange(e)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"last_name\">\r\n                        <Form.Label>last_name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"last_name\"\r\n                            value={last_name}\r\n                            name=\"last_name\"\r\n                            onChange={e => onChange(e)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={email}\r\n                            name=\"email\"\r\n                            onChange={e => onChange(e)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            name=\"password\"\r\n                            onChange={e => onChange(e)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" variant=\"primary\" className=\"my-2\">Sign In</Button>\r\n                </Form>\r\n            </FormContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useEffect, useState } from 'react';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { USER_PROFILE_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst Profile = ({location, history}) => {\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [formData, setFormData] = useState({\r\n        first_name: '',\r\n        last_name: '',\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { first_name, last_name, email, password } = formData;\r\n    \r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(updateUserProfile(first_name, last_name, email, password));\r\n    };\r\n\r\n    const userLoggedIn = useSelector(state => state.user)\r\n    const { userInfo } = userLoggedIn\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, user} = userDetails\r\n\r\n    const userProfileUpdate = useSelector(state => state.userProfileUpdate)\r\n    const { loading, success, updateError } = userProfileUpdate\r\n\r\n    useEffect(() => {\r\n        if(!userInfo){\r\n            // If user not authenticated?\r\n            // Redirect them to the login\r\n            history.push('/login')\r\n        }else{\r\n            if(!user || success)\r\n            {\r\n                dispatch({type:USER_PROFILE_UPDATE_RESET})\r\n                dispatch(getUserDetails())\r\n            }\r\n            else{\r\n                setFormData({...formData, ['first_name']: user.first_name, ['last_name']: user.last_name, ['email']: user.email})\r\n            }\r\n        }\r\n    }, [history, user, userInfo, redirect, success])\r\n\r\n    return (\r\n        <>\r\n            <FormContainer>\r\n                <h1>Sign In</h1>\r\n                {loading ? <Loader /> : updateError ? <Message variant=\"danger\">{updateError}</Message> : error ? <Message variant=\"danger\">{error}</Message> : <></>}\r\n                <Form onSubmit={onSubmit}>\r\n                    <Form.Group controlId=\"first_name\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            required\r\n                            placeholder=\"first_name\"\r\n                            value={first_name}\r\n                            name=\"first_name\"\r\n                            onChange={e => onChange(e)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"last_name\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            required\r\n                            placeholder=\"last_name\"\r\n                            value={last_name}\r\n                            name=\"last_name\"\r\n                            onChange={e => onChange(e)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            required\r\n                            placeholder=\"Email\"\r\n                            value={email}\r\n                            name=\"email\"\r\n                            onChange={e => onChange(e)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>New Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"New Password\"\r\n                            value={password}\r\n                            name=\"password\"\r\n                            onChange={e => onChange(e)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" variant=\"primary\" className=\"my-2\">update</Button>\r\n                </Form>\r\n            </FormContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React, {useState} from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport { Form, Button, ProgressBar } from 'react-bootstrap'\r\nimport Loader from '../../Loader';\r\nimport { fileUpload } from '../slice/documentsSlice'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst DocumentUpload = ({taskId}) => {\r\n    const progressBarValue = useSelector(state => state.documents.processDetail)\r\n    const loading = useSelector(state => state.documents.loading)\r\n    const dispatch = useDispatch();\r\n\r\n    const [file, setFile] = useState();\r\n    const [formData, setFormData] = useState({description: ''});\r\n    const { description } = formData;\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n    const handleFile = e =>{\r\n        setFile(e.target.files[0]);\r\n    }\r\n    const handleFileUpload = e => {\r\n        e.preventDefault();\r\n        dispatch(fileUpload({file, description, taskId}))\r\n    }\r\n    return (\r\n        <div>\r\n            {loading ? <Loader/> : <></>}\r\n            <Form onSubmit={handleFileUpload} style={{width:\"70%\"}}>\r\n                <Form.Group controlId=\"description\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        required\r\n                        placeholder=\"description\"\r\n                        value={description}\r\n                        name=\"description\"\r\n                        onChange={e => onChange(e)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br/>\r\n                <Form.Group>\r\n                    <Form.Label>File</Form.Label>\r\n                    <br/>\r\n                    <Form.Control\r\n                        type=\"file\"\r\n                        required\r\n                        name=\"file\"\r\n                        onChange={e => handleFile(e)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br/>\r\n                <Button type=\"submit\" variant=\"primary\" className=\"my-2\">Upload</Button>\r\n            </Form>\r\n            {progressBarValue ? \r\n                <ProgressBar animated now={progressBarValue} label={`${progressBarValue}%`} />\r\n                : <></>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DocumentUpload\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Table } from 'react-bootstrap'\r\n\r\nconst DocumentsView = ({taskId}) => {\r\n    const documents = useSelector(state => state.documents.entities)\r\n    const documentIds = useSelector(state => state.workpackages.entities[taskId].documents)\r\n    const [documentsData, setDocumentsData] = useState(documents)\r\n    const [documentDataIds, setDocumentDataIds] = useState(documentIds)\r\n    useEffect(() => {\r\n        setDocumentsData(documents) \r\n        setDocumentDataIds(documentIds)\r\n    }, [documents, documentIds])\r\n\r\n    return (\r\n        <Table striped bordered hover responsive size=\"sm\">\r\n            <thead>\r\n                <tr>\r\n                    <th><h5>Description</h5></th>\r\n                    <th><h5>URL</h5></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {documentsData && documentDataIds ?\r\n                (documentDataIds.map(docId => {\r\n                    const docs =  documentsData[docId]\r\n                    console.log(docs.id, docId)\r\n                    return (\r\n                        <tr key={docs.id}>\r\n                            <td>{docs.description}</td>\r\n                            <td style={{overflowX:'scroll', overflowY: 'scroll'}}><a href={docs.file} target=\"_blank\">{docs.file}</a></td>\r\n                        </tr>\r\n                    )\r\n                }))\r\n                : <>No Documents</>\r\n            }\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default DocumentsView\r\n","import React from 'react'\r\n\r\nconst CardView = ({task}) => {\r\n\r\n    return (\r\n        <div>\r\n            <div>Title: {task.title}</div>\r\n            <div>Procedure: {task.procedure}</div>\r\n            <div>Planned Start Date: {task.planned_start_date}</div>\r\n            <div>Planned End Date: {task.planned_end_date}</div>\r\n            <div>Planned Efforts: {task.planned_efforts}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardView\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../../Loader';\r\nimport { updateWorkpackage } from '../slice/workpackageSlice'\r\nconst EditCard = ({task}) => {\r\n\r\n    const loading = useSelector(state => state.workpackages.loading)\r\n\r\n    const dispatch = useDispatch()\r\n    const [formData, setFormData] = useState({\r\n        title: task.title,\r\n        procedure: task.procedure,\r\n        planned_start_date: task.planned_start_date,\r\n        planned_end_date: task.planned_end_date,\r\n        planned_efforts: task.planned_efforts,\r\n    });\r\n\r\n    const { title, procedure, planned_start_date, planned_end_date, planned_efforts } = formData;\r\n\r\n    const onChange = e => {\r\n        setFormData({...formData, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(task)\r\n        dispatch(updateWorkpackage({ id:task.id, title, procedure, planned_start_date, planned_end_date, planned_efforts }))\r\n    };\r\n    return (\r\n        <div>\r\n            {loading ? <Loader/> : <></>}\r\n            <Form onSubmit={onSubmit}>\r\n                <Form.Group controlId=\"title\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        required\r\n                        placeholder=\"title\"\r\n                        value={title}\r\n                        name=\"title\"\r\n                        onChange={e => onChange(e)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"procedure\">\r\n                    <Form.Label>Procedure</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        required\r\n                        placeholder=\"procedure\"\r\n                        value={procedure}\r\n                        name=\"procedure\"\r\n                        onChange={e => onChange(e)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId=\"planned_start_date\">\r\n                    <Form.Label>Planned Start Date</Form.Label>\r\n                    <Form.Control\r\n                        type=\"date\"\r\n                        required\r\n                        placeholder=\"Email\"\r\n                        value={planned_start_date}\r\n                        name=\"planned_start_date\"\r\n                        onChange={e => onChange(e)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"planned_end_date\">\r\n                    <Form.Label>Planned End Date</Form.Label>\r\n                    <Form.Control\r\n                        type=\"date\"\r\n                        placeholder=\"New Password\"\r\n                        value={planned_end_date}\r\n                        name=\"planned_end_date\"\r\n                        onChange={e => onChange(e)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"planned_efforts\">\r\n                    <Form.Label>Planned Efforts</Form.Label>\r\n                    <Form.Control\r\n                        type=\"number\"\r\n                        min=\"1\"\r\n                        required\r\n                        placeholder=\"planned_efforts\"\r\n                        value={planned_efforts}\r\n                        name=\"planned_efforts\"\r\n                        onChange={e => onChange(e)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\" className=\"my-2\">update</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditCard\r\n","import React from 'react'\r\nimport { Tab, Nav, Col, Row } from 'react-bootstrap'\r\nimport DocumentUpload from './DocumentUpload'\r\nimport DocumentsView from './DocumentsView'\r\nimport CardView from './CardView'\r\nimport EditCard from './EditCard'\r\nconst Sidebar = ({task}) => {\r\n    return (        \r\n        <Tab.Container defaultActiveKey=\"view\">\r\n        <Row>\r\n          <Col sm={3}>\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"view\">View</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"edit\">Edit</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"documents\">Documents</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"documentsUpload\">Upload Documents</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col sm={9}>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"view\">\r\n                <CardView task={task}/>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"edit\">\r\n                <EditCard task={task}/>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"documents\">\r\n                <DocumentsView taskId={task.id}/>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"documentsUpload\">\r\n                <DocumentUpload taskId={task.id}/>\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport { Row, Container } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport Sidebar from '../components/board/components/Sidebar';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Card = () => {\r\n    const { taskId }= useParams();\r\n    const task = useSelector(state => state.workpackages.entities[taskId])\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row className=\"d-flex\">\r\n                <Sidebar task={task}/>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\nimport Layout from './hocs/Layout';\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Home from './containers/Home';\nimport Board from './components/board/Board';\nimport Login from './containers/Login';\nimport Register from './containers/Register';\nimport Profile from './containers/Profile';\nimport Card from './containers/Card';\n\nconst App = () => {\n  return (\n    <div>\n      <Router>\n        <Layout>\n          <div className=\"main\">\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/board\" exact component={Board} />\n              <Route path=\"/login\" exact component={Login} />\n              <Route path=\"/register\" exact component={Register} />\n              <Route path=\"/profile\" exact component={Profile} />\n              <Route path=\"/card/:taskId\" exact component={Card} />\n            </Switch>\n          </div>\n        </Layout>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { userReducer, userDetailsReducer, userProfileUpdateReducer } from './reducers/userReducer';\r\nimport columnsReducer from './components/board/slice/columnsSlice';\r\nimport workpackagesReducer from './components/board/slice/workpackageSlice';\r\nimport documentsSlice from './components/board/slice/documentsSlice';\r\nconst reducers = combineReducers({\r\n    user : userReducer,\r\n    userDetails: userDetailsReducer,\r\n    userProfileUpdate: userProfileUpdateReducer,\r\n    columns: columnsReducer,\r\n    workpackages: workpackagesReducer,\r\n    documents: documentsSlice,\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst initialState = {\r\n    user: {userInfo: userInfoFromStorage},\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import {\r\n    USER_REQUEST,\r\n    USER_SUCCESS,\r\n    USER_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_PROFILE_UPDATE_REQUEST,\r\n    USER_PROFILE_UPDATE_SUCCESS,\r\n    USER_PROFILE_UPDATE_FAIL,\r\n    USER_PROFILE_UPDATE_RESET,\r\n} from '../constants/userConstants';\r\n\r\nexport const userReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_REQUEST:\r\n            return { loading:true }\r\n        case USER_SUCCESS:\r\n            return { loading:false, userInfo:action.payload }\r\n        case USER_FAIL:\r\n            return { loading:false, error:action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = {  }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return {...state, loading:true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading:false, user:action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading:false, error:action.payload }\r\n            case USER_DETAILS_RESET:\r\n                return {  }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userProfileUpdateReducer = (state = {  }, action) => {\r\n    switch (action.type) {\r\n        case USER_PROFILE_UPDATE_REQUEST:\r\n            return { loading:true }\r\n        case USER_PROFILE_UPDATE_SUCCESS:\r\n            return { loading:false, success: true, userInfo:action.payload }\r\n        case USER_PROFILE_UPDATE_FAIL:\r\n            return { loading:false, updateError:action.payload }\r\n        case USER_PROFILE_UPDATE_RESET:\r\n            return {  }\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}